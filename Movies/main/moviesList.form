<?xml version="1.0" encoding="utf-8"?>
<?data-format version="0.400"?>
<Form>
  <Name value="moviesList" />
  <Caption value="Movies list" />
  <Content>
    <Panel>
      <Name value="panel1" />
      <Orientation value="Vertical" />
      <Panel.Height value="#" />
      <Panel.Width value="*" />
      <Children>
        <EnumCombo>
          <Name value="enumCombo1" />
          <Panel.Height value="#" />
          <Panel.Width value="300px" />
          <Bindings>
            <Binding SourceProperty="Data" Expression="form.type" />
            <Binding SourceProperty="IsRequiredMarkVisible" Expression="form.type.isRequired()" />
            <Binding SourceProperty="Caption" Expression="form.type.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-enumcombo" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </EnumCombo>
        <Panel>
          <Name value="panel3" />
          <Orientation value="Vertical" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-panel" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </Panel>
        <GroupBox>
          <Name value="groupBox1" />
          <Panel.Height value="#" />
          <Panel.Width value="*" />
          <Content>
            <Repeater>
              <Name value="repeater1" />
              <Content>
                <Panel>
                  <Name value="panel2" />
                  <Orientation value="Horizontal" />
                  <Children>
                    <TextBox>
                      <Name value="textBox1" />
                      <CaptionVAlign value="Middle" />
                      <Panel.Height value="#" />
                      <Panel.Width value="300px" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="name" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="name.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="name.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                    <TextBox>
                      <Name value="textBox2" />
                      <CaptionVAlign value="Middle" />
                      <Panel.Height value="#" />
                      <Panel.Width value="300px" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="type" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="type.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="type.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                    <TextBox>
                      <Name value="textBox3" />
                      <CaptionVAlign value="Middle" />
                      <Panel.Height value="#" />
                      <Panel.Width value="300px" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="yearOfRelease" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="yearOfRelease.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="yearOfRelease.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                    <TextBox>
                      <Name value="textBox4" />
                      <CaptionVAlign value="Middle" />
                      <Panel.Height value="#" />
                      <Panel.Width value="300px" />
                      <Bindings>
                        <Binding SourceProperty="Data" Expression="id" />
                        <Binding SourceProperty="IsRequiredMarkVisible" Expression="id.isRequired()" />
                        <Binding SourceProperty="Caption" Expression="id.caption()" />
                      </Bindings>
                      <CssClass>
                        <CssClassConditional>
                          <ClassName value="{theme}-textbox" />
                          <IsThemedStyle value="True" />
                        </CssClassConditional>
                      </CssClass>
                    </TextBox>
                  </Children>
                  <CssClass>
                    <CssClassConditional>
                      <ClassName value="{theme}-panel" />
                      <IsThemedStyle value="True" />
                    </CssClassConditional>
                  </CssClass>
                </Panel>
              </Content>
              <Bindings>
                <Binding SourceProperty="DataItems" Expression="movies" />
              </Bindings>
              <CssClass>
                <CssClassConditional>
                  <ClassName value="{theme}-repeater" />
                  <IsThemedStyle value="True" />
                </CssClassConditional>
              </CssClass>
            </Repeater>
          </Content>
          <Bindings>
            <Binding SourceProperty="Caption" Expression="movies.caption()" />
          </Bindings>
          <CssClass>
            <CssClassConditional>
              <ClassName value="{theme}-groupbox" />
              <IsThemedStyle value="True" />
            </CssClassConditional>
          </CssClass>
        </GroupBox>
      </Children>
      <CssClass>
        <CssClassConditional>
          <ClassName value="{theme}-panel" />
          <IsThemedStyle value="True" />
        </CssClassConditional>
      </CssClass>
    </Panel>
  </Content>
  <DataContext>
    <DataContext>
      <Children>
        <Collection>
          <Name value="movies" />
          <Caption value="Movies" />
          <Children>
            <Include>
              <Include reference="+DataEntities.basic" />
            </Include>
          </Children>
        </Collection>
        <Attribute>
          <Name value="type" />
          <Caption value="Type" />
          <MetaType reference="+MetaTypes.Type" />
          <OnChange>
            <ActionEvent ReferencedAction="+UiParts.moviesList.handler_type_OnChange" />
          </OnChange>
        </Attribute>
      </Children>
    </DataContext>
  </DataContext>
  <OnCreate>
    <ActionEvent ReferencedAction="~init" />
  </OnCreate>
  <Actions>
    <ActionBlock>
      <Name value="init" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.actions.loadData()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="loadData" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[

var query = "list"


var response = apiobjects.moviesServer.getAsync(query)




if response.isError() then
	system.consoleError(response.getErrorMessage())
	
else
	/*
	if form.type.isEmpty() then
		form.movies1.fromJson(response.getJsonString())
	endif
	*/
	form.movies.fromJson(response.getJsonString())
	
	if form.type = enums.Type.Movies then	
		form.movies.fromJson(form.movies.where(current.type = "movie").toJson())	
	endif
	
	if form.type = enums.Type.Series then
		form.movies.fromJson(form.movies.where(current.type = "series").toJson())	
	endif
	
	
endif]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
    <ActionBlock>
      <Name value="handler_type_OnChange" />
      <IsPrivate value="True" />
      <ActionLangBody IsValid="True">
        <Script><![CDATA[form.actions.loadData()]]></Script>
      </ActionLangBody>
      <DataContext>
        <ActionDataContext />
      </DataContext>
    </ActionBlock>
  </Actions>
</Form>